{"ast":null,"code":"import _defineProperty from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/khushbur/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/khushbur/react/my-app/src/Forms.js\";\nimport React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nvar Forms =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Forms, _Component);\n\n  function Forms(props) {\n    var _this;\n\n    _classCallCheck(this, Forms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forms).call(this, props));\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.reponsemessage = function () {\n      _this.setState({\n        result: \"Successfully Login\"\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          result: \"\"\n        });\n      }, 5000);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(Forms, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      console.log(fieldValidationErrors);\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case 'email':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n          break;\n\n        case 'password':\n          passwordValid = value.length >= 6;\n          fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.emailValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"demoForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Email\"), \"\\xA0\", React.createElement(\"input\", {\n        type: \"email\",\n        required: true,\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"Please enter email address\",\n        value: this.state.email,\n        onChange: this.handleUserInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Password\"), \"\\xA0\", React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        placeholder: \"Please enter password\",\n        value: this.state.password,\n        onChange: this.handleUserInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !this.state.formValid,\n        onClick: this.reponsemessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.result));\n    }\n  }]);\n\n  return Forms;\n}(Component);\n\nexport { Forms as default };","map":{"version":3,"sources":["/home/khushbur/react/my-app/src/Forms.js"],"names":["React","Component","FormErrors","Forms","props","handleUserInput","e","name","target","value","setState","validateField","reponsemessage","result","setTimeout","state","email","password","formErrors","emailValid","passwordValid","formValid","fieldName","fieldValidationErrors","console","log","match","length","validateForm"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,YAAP;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAanBC,eAbmB,GAaD,UAACC,CAAD,EAAO;AACrB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;;AACA,YAAKC,QAAL,qBAAiBH,IAAjB,EAAwBE,KAAxB,GACI,YAAM;AAAE,cAAKE,aAAL,CAAmBJ,IAAnB,EAAyBE,KAAzB;AAAiC,OAD7C;AAEH,KAlBkB;;AAAA,UA8CnBG,cA9CmB,GA8CF,YAAM;AACnB,YAAKF,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAd;;AACAC,MAAAA,UAAU,CAAC,YAAM;AAAE,cAAKJ,QAAL,CAAc;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAd;AAAgC,OAAzC,EAA2C,IAA3C,CAAV;AACH,KAjDkB;;AAEf,UAAKE,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,UAAU,EAAE;AAAEF,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAHH;AAITE,MAAAA,UAAU,EAAE,KAJH;AAKTC,MAAAA,aAAa,EAAE,KALN;AAMTC,MAAAA,SAAS,EAAE,KANF;AAOTR,MAAAA,MAAM,EAAE;AAPC,KAAb;AAFe;AAWlB;;;;kCASaS,S,EAAWb,K,EAAO;AAC5B,UAAIc,qBAAqB,GAAG,KAAKR,KAAL,CAAWG,UAAvC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,qBAAZ;AACA,UAAIJ,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAA5B;AACA,UAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWK,aAA/B;;AAEA,cAAQE,SAAR;AACI,aAAK,OAAL;AACIH,UAAAA,UAAU,GAAGV,KAAK,CAACiB,KAAN,CAAY,sCAAZ,CAAb;AACAH,UAAAA,qBAAqB,CAACP,KAAtB,GAA8BG,UAAU,GAAG,EAAH,GAAQ,aAAhD;AACA;;AACJ,aAAK,UAAL;AACIC,UAAAA,aAAa,GAAGX,KAAK,CAACkB,MAAN,IAAgB,CAAhC;AACAJ,UAAAA,qBAAqB,CAACN,QAAtB,GAAiCG,aAAa,GAAG,EAAH,GAAQ,eAAtD;AACA;;AACJ;AACI;AAVR;;AAaA,WAAKV,QAAL,CAAc;AACVQ,QAAAA,UAAU,EAAEK,qBADF;AAEVJ,QAAAA,UAAU,EAAEA,UAFF;AAGVC,QAAAA,aAAa,EAAEA;AAHL,OAAd,EAIG,KAAKQ,YAJR;AAKH;;;mCAOc;AACX,WAAKlB,QAAL,CAAc;AAAEW,QAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWI,UAAX,IAAyB,KAAKJ,KAAL,CAAWK;AAAjD,OAAd;AACH;;;6BAEQ;AACL,aACI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,UAEN;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,MAA5B;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAsD,QAAA,IAAI,EAAC,OAA3D;AAAmE,QAAA,WAAW,EAAC,4BAA/E;AACc,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KADhC;AACuC,QAAA,QAAQ,EAAE,KAAKX,eADtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM,CALJ,EASU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATV,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,UAEN;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAgD,QAAA,IAAI,EAAC,UAArD;AAAgE,QAAA,WAAW,EAAC,uBAA5E;AACc,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,QADhC;AAC0C,QAAA,QAAQ,EAAE,KAAKZ,eADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM,CAVJ,EAcU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdV,EAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,QAAQ,EAAE,CAAC,KAAKU,KAAL,CAAWM,SAAxE;AAAmF,QAAA,OAAO,EAAE,KAAKT,cAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKG,KAAL,CAAWF,MAAjB,CAhBJ,CADJ;AAoBH;;;;EA7E8BZ,S;;SAAdE,K","sourcesContent":["import React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nexport default class Forms extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            formErrors: { email: '', password: '' },\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n            result: ''\n        }\n    }\n\n    handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n    }\n    \n    validateField(fieldName, value) {\n        var fieldValidationErrors = this.state.formErrors;\n        console.log(fieldValidationErrors);\n        var emailValid = this.state.emailValid;\n        var passwordValid = this.state.passwordValid;\n\n        switch (fieldName) {\n            case 'email':\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            case 'password':\n                passwordValid = value.length >= 6;\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n                break;\n            default:\n                break;\n        }\n\n        this.setState({\n            formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    reponsemessage = () => {\n        this.setState({ result: \"Successfully Login\" });\n        setTimeout(() => { this.setState({ result: \"\" }); }, 5000);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.emailValid && this.state.passwordValid });\n    }\n\n    render() {\n        return (\n            <form className=\"demoForm\">\n                <h2>Login</h2>\n                <div className=\"panel panel-default\">\n                    <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>&nbsp;\n          <input type=\"email\" required className=\"form-control\" name=\"email\" placeholder=\"Please enter email address\"\n                        value={this.state.email} onChange={this.handleUserInput} />\n                </div><br />\n                <div>\n                    <label htmlFor=\"password\">Password</label>&nbsp;\n          <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Please enter password\"\n                        value={this.state.password} onChange={this.handleUserInput} />\n                </div><br/>\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={!this.state.formValid} onClick={this.reponsemessage}>Sign In</button>\n                <div>{this.state.result}</div>\n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}